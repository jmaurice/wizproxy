diff -ru adns-1.2/src/internal.h adns-1.2+wiz/src/internal.h
--- adns-1.2/src/internal.h	2006-04-08 04:36:57.000000000 -1000
+++ adns-1.2+wiz/src/internal.h	2007-05-26 19:54:08.000000000 -1000
@@ -230,6 +230,7 @@
   byte *cname_dgram;
   int cname_dglen, cname_begin;
   /* If non-0, has been allocated using . */
+  int cname_alias_hops_left;
 
   vbuf search_vb;
   int search_origlen, search_pos, search_doneabs;
Only in adns-1.2+wiz/src: libadns.a
diff -ru adns-1.2/src/query.c adns-1.2+wiz/src/query.c
--- adns-1.2/src/query.c	2006-04-08 04:36:57.000000000 -1000
+++ adns-1.2+wiz/src/query.c	2007-05-26 19:54:48.000000000 -1000
@@ -63,6 +63,7 @@
 
   qu->cname_dgram= 0;
   qu->cname_dglen= qu->cname_begin= 0;
+  qu->cname_alias_hops_left = 7;
 
   adns__vbuf_init(&qu->search_vb);
   qu->search_origlen= qu->search_pos= qu->search_doneabs= 0;
diff -ru adns-1.2/src/reply.c adns-1.2+wiz/src/reply.c
--- adns-1.2/src/reply.c	2006-04-08 04:36:57.000000000 -1000
+++ adns-1.2+wiz/src/reply.c	2007-05-26 19:56:02.000000000 -1000
@@ -190,12 +190,12 @@
       if (qu->flags & adns_qf_cname_forbid) {
 	adns__query_fail(qu,adns_s_prohibitedcname);
 	return;
-      } else if (qu->cname_dgram) { /* Ignore second and subsequent CNAME(s) */
+      } else if (qu->cname_dgram && --(qu->cname_alias_hops_left) <= 0) { /* Don't follow "too long" CNAME chains */
 	adns__debug(ads,serv,qu,"allegedly canonical name %s"
-		    " is actually alias for %s", qu->answer->cname,
+		    " is actually alias for %s and aliases too deep", qu->answer->cname,
 		    adns__diag_domain(ads,serv,qu, &qu->vb,
 				      dgram,dglen,rdstart));
-	adns__query_fail(qu,adns_s_prohibitedcname);
+	adns__query_fail(qu,adns_s_norecurse);
 	return;
       } else if (wantedrrs) { /* Ignore CNAME(s) after RR(s). */
 	adns__debug(ads,serv,qu,"ignoring CNAME (to %s) coexisting with RR",
